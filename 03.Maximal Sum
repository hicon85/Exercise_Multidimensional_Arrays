using System;
using System.Collections.Generic;
using System.Linq;

namespace _03.Maximal_Sum
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] dimensions = Console.ReadLine()
                 .Split(" ")
                 .Select(int.Parse)
                 .ToArray();

            int rows = dimensions[0];
            int cols = dimensions[1];

            int[,] matrix = GoodJob(rows, cols);

            int bestSum = 0;
            int bestRowIndex = 0;
            int bestColIndex = 0;


            for (int row = 0; row < rows - 2; row++)
            {
                for (int col = 0; col < cols - 2; col++)
                {
                    int firstRowSum = matrix[row, col] + matrix[row, col + 1]
                        + matrix[row, col + 2];

                    int secondsRowSum = matrix[row+1, col] + matrix[row+1, col + 1]
                       + matrix[row + 1, col + 2];

                    int treeRowSum = matrix[row+2, col] + matrix[row+2, col + 1]
                       + matrix[row+2, col + 2];

                    int currentSum = firstRowSum + secondsRowSum + treeRowSum;

                    if(currentSum > bestSum)
                    {
                        bestSum = currentSum;
                        bestRowIndex = row;
                        bestColIndex = col;

                    }
                }
            }
            Console.WriteLine($"Sum = {bestSum}");

            for (int row = bestRowIndex; row <= bestRowIndex + 2; row++)
            {
                for (int col = bestColIndex; col <= bestColIndex + 2; col++)
                {
                    Console.Write(matrix[row,col] + " ");
                }
                Console.WriteLine();
            }
        }
        static int[,] GoodJob(int rows, int cols)
        {
            int[,] matrix = new int[rows, cols];

            for (int row = 0; row < rows; row++)
            {
                int[] array = Console.ReadLine()
                    .Split(" ")
                    .Select(int
                    .Parse)
                    .ToArray();

                for (int col = 0; col < cols; col++)
                {
                    matrix[row, col] = array[col];
                }
            }
            return matrix;

        }

    }
}
